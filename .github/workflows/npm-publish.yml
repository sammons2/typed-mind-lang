name: Publish NPM Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no actual publishing)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      skip_tests:
        description: 'Skip tests before publishing'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

# Prevent concurrent publishing
concurrency:
  group: npm-publish-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  id-token: write  # For npm provenance

jobs:
  validate:
    name: Validate and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      packages_to_publish: ${{ steps.check.outputs.packages }}
      has_packages: ${{ steps.check.outputs.has_packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: Lint
        run: pnpm lint

      - name: Test
        if: ${{ github.event.inputs.skip_tests != 'true' }}
        run: pnpm test

      - name: Build publishable packages only
        run: |
          # Build only the packages that will be published to NPM
          pnpm --filter "@sammons/typed-mind" \
               --filter "@sammons/typed-mind-renderer" \
               --filter "@sammons/typed-mind-cli" \
               --filter "@sammons/typed-mind-lsp" \
               build

      - name: Check packages to publish
        id: check
        run: |
          PACKAGES=$(.github/scripts/check-npm-packages.sh)
          if [ -z "$PACKAGES" ]; then
            echo "No packages need publishing"
            echo "packages=" >> $GITHUB_OUTPUT
            echo "has_packages=false" >> $GITHUB_OUTPUT
          else
            echo "Packages to publish: $PACKAGES"
            echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
            echo "has_packages=true" >> $GITHUB_OUTPUT
          fi

  publish:
    name: Publish to NPM
    needs: validate
    if: needs.validate.outputs.has_packages == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: npm
      url: https://www.npmjs.com/org/sammons
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: Build publishable packages only
        run: |
          # Build only the packages that will be published to NPM
          pnpm --filter "@sammons/typed-mind" \
               --filter "@sammons/typed-mind-renderer" \
               --filter "@sammons/typed-mind-cli" \
               --filter "@sammons/typed-mind-lsp" \
               build

      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm whoami

      - name: Publish packages
        run: |
          if [[ "${{ github.event.inputs.dry_run }}" == "true" ]]; then
            .github/scripts/publish-npm-packages.sh --dry-run
          else
            .github/scripts/publish-npm-packages.sh
          fi

      - name: Verify published packages
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          for package_dir in ${{ needs.validate.outputs.packages_to_publish }}; do
            if [ -d "$package_dir" ]; then
              package_name=$(jq -r '.name' "$package_dir/package.json")
              version=$(jq -r '.version' "$package_dir/package.json")
              echo "Verifying $package_name@$version..."
              npm view "$package_name@$version" version || exit 1
            fi
          done

  notify:
    name: Notify completion
    needs: [validate, publish]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Summary
        run: |
          echo "## NPM Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.validate.outputs.has_packages }}" != "true" ]]; then
            echo "✅ No packages needed publishing" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.publish.result }}" == "success" ]]; then
            echo "✅ Successfully published packages" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Packages: ${{ needs.validate.outputs.packages_to_publish }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Publishing failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ github.event.inputs.dry_run }}" == "true" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ This was a dry run - no packages were actually published" >> $GITHUB_STEP_SUMMARY
          fi